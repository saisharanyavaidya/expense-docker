name: expense
# It will create a network named expense.. It is written on top level, hence it is applicable to all services
networks:
  default:
    name: expense
volumes:
  mysql:
    external: true # this means you have to create docker volume manually using command --> docker volume create mysql
#For docker-compose.yaml file to work, images should be already available.. Since it refers existing images and create containers out of it.. Use below command to create images
#For i in backend frontend mysql ; do cd $i ; docker build -t $i:v1.0.0 . ; cd .. ; done 
services:
  mysql:
    #image: mysql:v1.0.0
    image: sharanya0510/mysql:v1.0 #now this pulls teh image from docker hub
    container_name: mysql #name of the container to be created
    volumes: # this section means -v volume-name:/path/in/container
      - source: mysql
        target: /var/lib/mysql #--> this is the default data directory of mysql
        type: volume 
  backend:
    #image: backend:v1.0.0
    image: sharanya0510/backend:v1.0
    container_name: backend
    #this means backend should wait for sometime so that mysql gets completed in that time as it depends on mysql creation.. otherwise we get connection error from backend while connecting to mysql
    # node /opt/server/index.js this is similar to CMD["node","index.js"]
    command: sh -c "sleep 20 && node /opt/server/index.js"
    depends_on:
      - mysql
  frontend:
    #image: frontend:v1.0.0
    image: sharanya0510/frontend:v1.0
    container_name: frontend
    ports:
      - "80:80" # we gave ports only to frontend because this has to be accessed from internet.. others like backend and mysql should be restricted so dont give ports
    depends_on:
      - backend